<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enjoy biru </title>
</head>

<body>
    <div class="header">
        <button class="hisb" onclick="loadHis()">history</button>
        <div id="chat">
        </div>
    </div>
    <div class="footer">
        <input class="inp" id="message" type="text" placeholder="Type your message..." autofocus />
        <button class="butt" id="cl0" onclick="sendMessage()">Send</button>
    </div>

<style>
      body {
            margin: 0;
            padding: 0;
            background-color: #EEE;
        }.header {
            width: 100%;
            height: 93%;


        }

        .footer {
            width: 100%;
            height: 7%;
            margin: 0px;
            padding: 0px;
            position: fixed;
            bottom: 0;
            right: 0;


        }

        .inp {
            height: 100%;
            width: 90%;
            margin: 0px;
            margin-left: 0px;
            padding-left: 22px;
            border: 1px;
            outline: none;
        }


        .butt {
            margin: 0px;
            padding: 0px;
            height: 100%;
            width: 7.6%;
            border: 1px;
            background-color: #76D04B;
            color: #4F4D3F;
            font-size: 17px;
            /* background-color: #0a0000; */

        }

        .hisb {
            margin: 0px;
            padding: 8px;
            width: 100%;
            border: 0px;
            background-color: #04B8BC;
            color: #4F4D3F;
            font-size: 16px;

        }

        ::placeholder {
            font-size: 16px;

            padding-left: 16px;
        }

        input[type=text] {

            font-size: 18px;

        }

        p {
            font-size: 25px;
            margin-top: 0px;
            margin-bottom: 0px;

        }

        .last {
            color: #d35399;

        }

        .bluee {
            background-color: #1877F2;
            color: #1877F2;
            font-size: 16px;
            border-radius: 8px;

        }


        @media screen and (max-width:1166px) {

            p {
                font-size: 20px;
            }

            h1 {
                font-size: 22px;
            }

            .inp {
                /* font-size: 200px; */
                height: 100%;
                width: 80%;
                margin: 0px;
                margin-left: 0px;
                padding-left: 2px;
                border: 1px;
                outline: none;
            }

            .butt {
                margin: 0px;
                padding: 0px;
                height: 100%;
                width: 16.6%;
                border: 1px;
                background-color: #76D04B;
                color: #4F4D3F;
                font-size: 14px;
                /* background-color: #0a0000; */

            }

            .hisb {
                margin: 0px;
                padding: 8px;
                width: 100%;
                border: 0px;
                background-color: #04B8BC;
                color: #4F4D3F;
                font-size: 12px;

            }

            ::placeholder {
                font-size: 13px;

                padding-left: 16px;
            }
        }

        @media screen and (max-width:235px) {

            p {
                font-size: 10px;
            }

            h1 {
                font-size: 12px;
            }

            .inp {
                /* font-size: 200px; */
                height: 100%;
                width: 60%;
                margin: 0px;
                margin-left: 0px;
                /* padding-left: 2px; */
                border: 1px;
                outline: none;
            }

            .butt {
                margin: 0px;
                padding: 0px;
                height: 100%;
                width: 35.6%;
                border: 1px;
                background-color: #76D04B;
                color: #4F4D3F;
                font-size: 10px;
                /* background-color: #0a0000; */

            }

            .hisb {
                margin: 0px;
                padding: 8px;
                width: 100%;
                border: 0px;
                background-color: #04B8BC;
                color: #4F4D3F;
                font-size: 10px;

            }

            ::placeholder {
                font-size: 10px;

                /* padding-left: 16px; */
            }
        }

        h6 {
            margin-top: 0px;
            margin-bottom: 25px;

        }
    </style>

<script>
// // alert(6)
// import { io } from "socket.io-client";
// const socket = io();
// socket.emit('joined')

socket.on('welcome', (d1, t1) => {
    addMessage(d1, t1, 'noo')
})

socket.on('sttusBroadcast', () => {
    var aj = document.getElementById("chat").lastElementChild
    if (aj == null || aj == undefined) { 
        socket.emit('deji0')
    }
    else {
        var deiu = aj.innerText
        socket.emit('deji', deiu)
    }

})

socket.on('statusSender', () => {
    var ajj = document.getElementById("chat").lastElementChild
    if (ajj == null || ajj == undefined) {
        socket.emit('deji0s')
     }
    else {
        var deiuo = ajj.innerText
        socket.emit('dejiSender', deiuo)
    }

})

socket.on('newMsg', (a, e, con) => {
    addMessage(a, e, con)
})

window.sendMessage = function () {
    window.mes = document.getElementById("message").value.trimStart()
    var lec = document.getElementById("chat").lastElementChild
    var e
    if (lec !== null && lec !== undefined) { e = lec.innerText; }

    if (!mes) return false;
    socket.emit('sendMessage', mes, e)

    {
        document.getElementById("message").value = "";
        if (mes === "eror" || mes === "Eror" || mes === "EROR") { lkk('#ff0f0f', '#ff0f0f', '#ff0f0f') }
        else if (mes === "D0000000000") { lkk('#0d05f5', '#0d05f5', '#0d05f5') }
        else { }
    }

}

window.addMessage = function (message, d, con) {
    window.node = document.createElement("P");
    window.text = document.createTextNode(message);
    node.appendChild(text);
    if (con !== 'noo') { lkk() }
    document.getElementById("chat").appendChild(node);
    addtime(d)
};

window.addtime = function (tt) {
    window.node = document.createElement("h6");
    window.text = document.createTextNode(tt);
    node.appendChild(text);

    document.getElementById("chat").appendChild(node);
};

socket.on('his', (data, ttt) => {
    addhis(data, ttt);
})

window.loadHis = function () {
    window.dae = document.getElementById("chat").children[1].innerText
    socket.emit('loadhis', dae)
}

window.addhis = function (message, o) {
    {
        window.node = document.createElement("h1");
        window.text = document.createTextNode(message);
        node.appendChild(text);
        window.child = document.createElement('h6');
        window.te = document.createTextNode(o);
    }

    if (message !== "No more data") { child.appendChild(te) }
    if (message === "No more data") { node.classList.add('last') }

    window.one = document.getElementById("chat").firstElementChild;
    document.getElementById("chat").insertBefore(node, one)
    document.getElementById("chat").insertBefore(child, one)
}

{
    window.lll = document.getElementById("message")
    lll.addEventListener("keypress", function (event) {
        // If the user presses the "Enter" key on the keyboard
        if (event.key == "Enter") {
            // Cancel the default action, if needed
            event.preventDefault();
            // Trigger the button element with a click
            window.ccc = document.getElementById("cl0")
            ccc.click();
        }
    })


    socket.on('reload', () => {
        location.reload();
    })


};



var lkk = function (p, p2, p3) {
    var cl1 = p || '#ff0f0f';
    var cl2 = p2 || '#76D04B';
    var cl3 = p3 || '#0a0000';
    window.uu = document.getElementById('cl0')
    uu.style.backgroundColor = cl1;
    window.setTimeout(() => {
        uu.style.backgroundColor = cl2;
        window.setTimeout(() => {
            uu.style.backgroundColor = cl3
            window.setTimeout(() => {
                uu.style.backgroundColor = '#76D04B';
            }, 150);
        }, 150);

    }, 150);
}







</script>

</body>

</html>